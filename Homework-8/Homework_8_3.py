# 3. Создайте собственный класс-исключение, который должен проверять
# содержимое списка на наличие только чисел. Проверить
# работу исключения на реальном примере. Необходимо
# запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются
# бесконечно, пока пользователь сам не остановит работу скрипта,
# введя, например, команду “stop”. При этом скрипт завершается,
# сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может
# вводить только числа и строки. При вводе пользователем очередного
# элемента необходимо реализовать проверку типа элемента и вносить его
# в список, только если введено число. Класс-исключение должен
# не позволить пользователю ввести текст (не число) и отобразить
# соответствующее сообщение. При этом работа скрипта не должна завершаться.


class Myerror(ValueError):
    def __init__(self, err):
        self.err = err


c = []
a = [str(i) for i in range(0, 1000000)]
ans = ''
while ans != 'stop':
    ans = input('Введите число для добавления в список ')
    try:
        if ans in a:
            c.append(int(ans))
        elif ans == 'stop':
            pass
        else:
            raise Myerror(f'Тип не является число {type(ans)}')
    except Myerror as err:
        print(err)
print(c)
